import Phaser from"phaser";import ScrollingBackground from"../Entities/Scrolling";import{postScore}from"./api/api";export default class SceneGameOver extends Phaser.Scene{constructor(){super({key:"SceneGameOver"})}create(){window.global.music.stop(),window.global.music.play(),window.global.scoreText=this.add.text(100,200,`Final score: ${window.global.score}`,{fontFamily:"monospace",fontSize:32,fontStyle:"bold",color:"#024704",align:"center"}),postScore(window.global.user.value,window.global.score),this.title=this.add.text(.5*this.game.config.width,100,"GAME OVER",{fontFamily:"monospace",fontSize:48,fontStyle:"bold",color:"#f51d0a",align:"center"}),this.title.setOrigin(.5),this.sfx={btnOver:this.sound.add("sndBtnOver"),btnDown:this.sound.add("sndBtnDown")},this.btnRestart=this.add.sprite(.5*this.game.config.width,.5*this.game.config.height,"restart"),this.btnRestart.setInteractive(),this.btnRestart.on("pointerup",(()=>{this.btnRestart.setTexture("restart"),this.sfx.btnOver.play(),window.global.music.stop(),this.scene.start("SceneMain")}),this),this.gameText=this.add.text(.38*this.game.config.width,.48*this.game.config.height,"Play Again",{fontSize:"24px",fill:"#fff"}),this.btnMenu=this.add.sprite(.5*this.game.config.width,.7*this.game.config.height,"menu"),this.btnMenu.setInteractive(),this.btnMenu.on("pointerup",(()=>{this.btnMenu.setTexture("menu"),this.sfx.btnOver.play(),window.global.music.stop(),this.scene.start("TitleScene")}),this),this.gameText=this.add.text(260,435,"Menu",{fontSize:"24px",fill:"#fff"}),this.btnQuit=this.add.sprite(.5*this.game.config.width,.85*this.game.config.height,"Quit"),this.btnQuit.setInteractive(),this.btnQuit.on("pointerup",(()=>{this.btnQuit.setTexture("Quit"),this.sfx.btnOver.play(),window.global.music.stop(),this.scene.start("UserNameScene")}),this),this.gameText=this.add.text(260,530,"Quit",{fontSize:"24px",fill:"#fff"}),this.backgrounds=[];for(let t=0;t<5;t+=1){const e=["sprBg0","sprBg1"],i=e[Phaser.Math.Between(0,e.length-1)],s=new ScrollingBackground(this,i,10*t);this.backgrounds.push(s)}}update(){for(let t=0;t<this.backgrounds.length;t+=1)this.backgrounds[t].update()}}